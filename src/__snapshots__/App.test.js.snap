// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Validating Router in App renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Unknown>
        <Switch>
                <Route
                        component={
                                Object {
                                        "$$typeof": Symbol(react.memo),
                                        "WrappedComponent": [Function],
                                        "compare": null,
                                        "displayName": "Connect(Login)",
                                        "type": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                        }
                        exact={true}
                        path="/"
                />
                <Route
                        component={
                                Object {
                                        "$$typeof": Symbol(react.memo),
                                        "WrappedComponent": [Function],
                                        "compare": null,
                                        "displayName": "Connect(Logout)",
                                        "type": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                        }
                        exact={true}
                        path="/logout"
                />
                \\
                <Route
                        component={[Function]}
                        exact={true}
                        path="/flightList"
                />
                <Route
                        component={[Function]}
                        path="/flightdetails/:passFlightId"
                />
        </Switch>
</Unknown>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Switch>
          <Route
                    component={
                              Object {
                                        "$$typeof": Symbol(react.memo),
                                        "WrappedComponent": [Function],
                                        "compare": null,
                                        "displayName": "Connect(Login)",
                                        "type": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                    }
                    exact={true}
                    path="/"
          />
          <Route
                    component={
                              Object {
                                        "$$typeof": Symbol(react.memo),
                                        "WrappedComponent": [Function],
                                        "compare": null,
                                        "displayName": "Connect(Logout)",
                                        "type": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                    }
                    exact={true}
                    path="/logout"
          />
          \\
          <Route
                    component={[Function]}
                    exact={true}
                    path="/flightList"
          />
          <Route
                    component={[Function]}
                    path="/flightdetails/:passFlightId"
          />
</Switch>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={
                            Object {
                                          "$$typeof": Symbol(react.memo),
                                          "WrappedComponent": [Function],
                                          "compare": null,
                                          "displayName": "Connect(Login)",
                                          "type": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
              }
              exact={true}
              path="/"
/>,
            <Route
              component={
                            Object {
                                          "$$typeof": Symbol(react.memo),
                                          "WrappedComponent": [Function],
                                          "compare": null,
                                          "displayName": "Connect(Logout)",
                                          "type": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
              }
              exact={true}
              path="/logout"
/>,
            "\\\\",
            <Route
              component={[Function]}
              exact={true}
              path="/flightList"
/>,
            <Route
              component={[Function]}
              path="/flightdetails/:passFlightId"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Login)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Logout)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
              "exact": true,
              "path": "/logout",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "\\\\",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/flightList",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/flightdetails/:passFlightId",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": Object {
        "$$typeof": Symbol(react.memo),
        "WrappedComponent": [Function],
        "compare": null,
        "displayName": "Connect(Layout)",
        "type": [Function],
        Symbol(Symbol.hasInstance): [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Unknown>
          <Switch>
                    <Route
                              component={
                                        Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "WrappedComponent": [Function],
                                                  "compare": null,
                                                  "displayName": "Connect(Login)",
                                                  "type": [Function],
                                                  Symbol(Symbol.hasInstance): [Function],
                                                }
                              }
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={
                                        Object {
                                                  "$$typeof": Symbol(react.memo),
                                                  "WrappedComponent": [Function],
                                                  "compare": null,
                                                  "displayName": "Connect(Logout)",
                                                  "type": [Function],
                                                  Symbol(Symbol.hasInstance): [Function],
                                                }
                              }
                              exact={true}
                              path="/logout"
                    />
                    \\
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/flightList"
                    />
                    <Route
                              component={[Function]}
                              path="/flightdetails/:passFlightId"
                    />
          </Switch>
</Unknown>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Switch>
            <Route
                        component={
                                    Object {
                                                "$$typeof": Symbol(react.memo),
                                                "WrappedComponent": [Function],
                                                "compare": null,
                                                "displayName": "Connect(Login)",
                                                "type": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                        }
                        exact={true}
                        path="/"
            />
            <Route
                        component={
                                    Object {
                                                "$$typeof": Symbol(react.memo),
                                                "WrappedComponent": [Function],
                                                "compare": null,
                                                "displayName": "Connect(Logout)",
                                                "type": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                        }
                        exact={true}
                        path="/logout"
            />
            \\
            <Route
                        component={[Function]}
                        exact={true}
                        path="/flightList"
            />
            <Route
                        component={[Function]}
                        path="/flightdetails/:passFlightId"
            />
</Switch>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                component={
                                Object {
                                                "$$typeof": Symbol(react.memo),
                                                "WrappedComponent": [Function],
                                                "compare": null,
                                                "displayName": "Connect(Login)",
                                                "type": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                }
                exact={true}
                path="/"
/>,
              <Route
                component={
                                Object {
                                                "$$typeof": Symbol(react.memo),
                                                "WrappedComponent": [Function],
                                                "compare": null,
                                                "displayName": "Connect(Logout)",
                                                "type": [Function],
                                                Symbol(Symbol.hasInstance): [Function],
                                              }
                }
                exact={true}
                path="/logout"
/>,
              "\\\\",
              <Route
                component={[Function]}
                exact={true}
                path="/flightList"
/>,
              <Route
                component={[Function]}
                path="/flightdetails/:passFlightId"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "displayName": "Connect(Login)",
                  "type": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": Object {
                  "$$typeof": Symbol(react.memo),
                  "WrappedComponent": [Function],
                  "compare": null,
                  "displayName": "Connect(Logout)",
                  "type": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
                "exact": true,
                "path": "/logout",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "\\\\",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/flightList",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/flightdetails/:passFlightId",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(Layout)",
          "type": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
